// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Department {
  id     String  @id @default(cuid())
  name   String  @db.Text
  events Event[]
}

model Event {
  id                  String      @id @default(cuid())
  name                String?     @db.Text
  slug                String      @unique
  summary             String?      @db.Text
  content             String?      @db.LongText
  poster              String?
  type                String?
  date                DateTime?
  location            String?
  registrationFee     String?
  prizeMoney          String?
  maximumRegistration Int?
  formLink            String?
  createdAt           DateTime    @default(now())
  department          Department? @relation(fields: [departmentId], references: [id])
  departmentId        String

  @@index([id])
  @@index([departmentId])
}

model Admin {
  user   User    @relation(fields: [id], references: [id])
  id String  @id @unique
  @@index([id])
}


model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  admin         Admin?

  @@unique([id, email])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

